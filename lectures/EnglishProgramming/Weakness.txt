shift+tap ==> indentation 한꺼번에 제거
replace,lower,upper => 반드시 할당, 원본 보존
짝수 인덱스만 출력하기, 짝수번째 요소를 출력하기 구분
변수 재할당 -> 문자열은 괜찮은데, 리스트는 a=list 형태면 list 바뀌어도 참조주소가 똑같아서 다같이 바뀜. a = list[:]

<<<if>>>
if 굳이 중첩해서 안써도 될때 지워라.
우선순위 고려: if->elif 순서 고려해서 case 3-2-4-1 순
i+=1 의 위치 잘 생각. 왠만하면 맨 마지막으로

<<<for>>>
for문 내림차순 가능 : ㄹfor i in range(10, 0, -1):
딕셔너리를 넣으면 key만 도는데, value를 출력하라고 하면

for i in dic_v:
    print(i, dic_v[i])

딕셔너리 value를 순회하고 싶을땐, for i dic_v.values():=> value 중복되도 1개씩 루프 변수에 할당
딕셔너리 쌍으로 순회하고 싶으면, for i in dic_v.items(): => key 랑 value를 튜플로 묶어 i에 할당
for i,j in dic_len.items(): => i에 key, j에 value를 할당
for i in 튜플 => 순서대로
for i in 집합=> 순서 없이 할당, 할때 마다 다르게 나옴
continue = "아래는 건너 뜁니다", while도 가능

<<<def>>>
함수를 쓸때는 늘 호출도 함께 해주기, f.close() 주의
return, print 둘다 없을 수도 있음
return만 썼는데 print(함수()) 이면 저장은 안되고 출력만 하는 것.
함수 print는 할당하면 None, 저장안되고 뿌리고 끝
일반 매개변수
기본값 매개변수 => def print(text, count =10) : 인수 입력안해도 기본값으로 할당, 입력하면 입력값으로, 항상 뒤에 써야함
키워드 매개변수 => def print(name, age, nationality) : 순서 바뀌어도 되는데, 정의할때 말고 호출할때가 문제임
   호출시 : print(age=20, name= "kim", nationality = "kor"), 키워드로 입력안할거면 순서대로, 호출시 항상 뒤에서, 순서 맞췄어도 뒤에서
가변 매개변수 => def print(*num) : 튜플 형태로 변수에 할당됨
가변 매개는 1개만 사용 가능, 가변+일반을 함께 사용하고 싶으면, 일반 매개변수를 반드시 기본값 매개로 써야함
    #EX. lets_print(1,2,3,4, sep = "hello")
딕셔너리 형식 가변 매개변수 => def print_POS(**words)
    #호출 : print_POS(love='verb', computer='noun', paper='noun', pretty='adjective') #key는 저절로 string
함수 변수에 담아서 호출 가능, 리스트에 함수 이름 넣어서도 가능

1.
def plus(a,b):
    return a+b
p = plus
p(1,2)

2.
def plus(a,b):
    return a+b
def minus(a,b):
    return a-b
cal = [plus, minus]
cal[0](5,1)

3.
def hello_k():
    print("안녕하세요")
def hello_e():
    print("Hello")
def greeting(A):
    A()
greeting(hello_k) #매개변수 자리에 함수이름을 인수로 입력함
greeting(hello_e)


중첩함수 : cal 안에서만 쓸 수 있는 함수. 지역변수 같아서 함수 밖에서 호출 불가

def cal(a, b):
    def cal_plus ():
        return a+b
    def cal_minus ():
        return a-b
    print(cal_plus())
    print(cal_minus())
cal(4,2)



- 문장 나눌 때) "~~." 이면 어떻게 뺄거임? 
    => ." 이면 안빼도록?
- 위의 경우) 따옴표 안에 문장만 가져오고 싶으면 어떻게 할거임? 
    =>"인덱스 찾아서, 그 사이에 있는 num 일때 for문 돌려서 string+
- a.lower() 쓸때) 고유명사는 어떻게 제외하고 처리할거임?

